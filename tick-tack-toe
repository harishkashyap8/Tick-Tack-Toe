#! /bin/bash
#
# Made by RandomGuy
# Started on 16-2-2022 - completed on 18-2-2022


## predefine
Version=2.0
# colors
Black="\e[0;30m"	&&	White="\e[1;37m"
Red="\e[1;31m"		&&	Green="\e[1;32m"
Yellow="\e[1;33m"	&&	Blue="\e[1;34m"
Purple="\e[1;35m"	&&	Aqua="\e[1;36m"
Noc="\e[0m"


head_(){ echo -e "$Green Tick Tack Toe | V$Version $Noc\n$Red [CTRL + c] Exit Game$Noc\n"; }

pause_(){ read -n1 -p "Press any key to continue..." Input1; }

draw_screen_(){
	clear; head_
	echo -e "\n\t$ClWhite ${xy[0]} | ${xy[1]} | ${xy[2]} \n\t-----------\n\t ${xy[3]} | ${xy[4]} | ${xy[5]} \n\t-----------\n\t ${xy[6]} | ${xy[7]} | ${xy[8]} "
}

who_wins_(){
	if [[ $playing_mode == 1 ]]; then
		ResultX="You win!"
		ResultO="Better luck next time!"
	elif [[ $playing_mode == 2 ]]; then
		[[ "$Player1" == "X" ]] && ResultX="Player1 Wins!"; ResultO="Player2 Wins!"
		[[ "$Player1" == "O" ]] && ResultX="Player2 Wins!"; ResultO="Player1 Wins!"
	fi

	# Rules to win
	if [[ "${xy[0]}${xy[1]}" == "${xy[1]}${xy[2]}" || "${xy[0]}${xy[3]}" == "${xy[3]}${xy[6]}" ]]; then
		clear; sleep 0.4
		result="Result${xy[1]}";
	       	echo -e "${!result}"; pause_; main_ "@"
	elif [[ "${xy[3]}${xy[4]}" == "${xy[4]}${xy[5]}" || "${xy[1]}${xy[4]}" == "${xy[4]}${xy[7]}" ]]; then
		clear; sleep 0.4
		result="Result${xy[4]}"
		echo -e "${!result}"; pause_; main_ "@"
	elif [[ "${xy[6]}${xy[7]}" == "${xy[7]}${xy[8]}" || "${xy[2]}${xy[5]}" == "${xy[5]}${xy[8]}" ]]; then
		clear; sleep 0.4
		result="Result${xy[8]}"
		echo -e "${!result}"; pause_; main_ "@"
	elif [[ "${xy[0]}${xy[4]}" == "${xy[4]}${xy[8]}" || "${xy[2]}${xy[4]}" == "${xy[4]}${xy[6]}" ]]; then
		clear; sleep 0.4
		result="Result${xy[4]}"
		echo -e "${!result}"; pause_; main_ "@"
	elif [[ "${xy[@]}" != *[1-9]* ]]; then
		clear; sleep 0.4
		echo -e "Match draw!"; pause_; main_ "@"
	fi
}

bot_turn_(){
	echo -en "\n\nthinking..." && sleep 0.4
	while true; do
		rand=$((RANDOM%10))
		case "$rand" in
			"9")	continue	;;
			*  )	[[ "${xy[$rand]}" == [XO] ]] && continue || xy[$rand]="${Orange}$Player2"	;;
		esac
		break
	done
}

player_turn_(){
	# change title according to playing mode
	if [[ $playing_mode == 1 ]]; then
		echo -ne "$Blue\n\nYour turn ($Player1)>>$Noc"
	elif [[ $playing_mode == 2 ]]; then
		echo -ne "$Purple\n\nPlayer1 turn ($Player1)>>$Noc"
	fi

	read -n1 Input1 && Input1=$((Input1 - 1))
	case "$Input1" in
		[0-8])	[[ "${xy[$Input1]}" == [XO] ]] && player_turn_ || xy[$Input1]="$Player1"	;;
		*)	draw_screen_; player_turn_	;;
	esac
	clear
}

player2_turn_(){
	echo -ne "$Blue\n\nPlayer2 turn ($Player2)>>$Noc"
	read -n1 Input1 && Input1=$((Input1-1))
	case "$Input1" in
		[0-8])	[[ "${xy[$Input1]}" == [XO] ]] && player2_turn_ || xy[$Input1]="$Player2"	;;
		*)	draw_screen_; player2_turn_	;;
	esac
}

main_(){
	clear
	xy=(1 2 3 4 5 6 7 8 9)	# Position

	# Assign X and O
	[[ $((RANDOM%2)) -eq 0 ]] && Player1='X' || Player2='O'
	[[ "$1" == "-"[xX]* ]] && Player1='X'
	[[ "$1" == "-"[oO]* ]] && Player1='O'
	[[ "$Player1" == "X" ]] && Player2='O' || Player2='X'

	echo -en "${Yellow}\n 1. Play with Bot\n 2. Play multiplayer\n 0. Exit\n${Noc}\n${Blue}> $White"
	read Input1
	case "$Input1" in
		"1")
			playing_mode=1; draw_screen_

			# choose random turn
			if [[ $((RANDOM%2)) -eq 0 ]]; then
				for (( i=0; i<9; i++ )); do
					player_turn_ && who_wins_ && draw_screen_ && bot_turn_ && who_wins_ && draw_screen_
				done
			else
				for (( i=0; i<9; i++ )); do
					bot_turn_ && who_wins_ && draw_screen_ && player_turn_ && who_wins_ && draw_screen_
				done
			fi
		;;
		"2")
			playing_mode=2; draw_screen_

			# choose random turn
			if [[ $((RANDOM%2)) -eq 0 ]]; then
				for (( i=0; i<9; i++ )); do
					player_turn_ && who_wins_ && draw_screen_ && player2_turn_ && who_wins_ && draw_screen_
				done
			else
				for (( i=0; i<9; i++ )); do
					player2_turn_ && who_wins_ && draw_screen_ && player_turn_ && who_wins_ && draw_screen_
				done
			fi
		;;
		"0")
			clear; echo "Exited"; exit
		;;
       		*  )
			clear; echo -e "\n$Red ¯\_(oo)_/¯$Noc\n"; pause_; main_ "@"
		;;
	esac
}
main_ "$@"
